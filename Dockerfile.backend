# MIRIX Backend Dockerfile
# 多阶段构建，优化镜像大小和构建效率

FROM python:3.11-slim as base

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list.d/debian.sources && \
    apt-get update && apt-get install -y \
    build-essential \
    curl \
    ffmpeg \
    git \
    libpq-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# 创建非root用户
RUN useradd --create-home --shell /bin/bash mirix

# 复制依赖文件
COPY requirements.txt pyproject.toml ./

# 安装Python依赖
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple

# 复制应用代码
COPY . .

# 设置Python路径
ENV PYTHONPATH=/app

# 创建必要的目录
RUN mkdir -p /app/logs /app/data /home/mirix/.mirix && \
    chown -R mirix:mirix /app /home/mirix

# 切换到非root用户
USER mirix

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:47283/health || exit 1

# 暴露端口
EXPOSE 47283

# 启动命令
CMD ["python", "main.py", "--host", "0.0.0.0", "--port", "47283"]